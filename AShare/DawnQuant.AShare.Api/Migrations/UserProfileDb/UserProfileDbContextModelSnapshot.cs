// <auto-generated />
using System;
using DawnQuant.AShare.Repository.Impl.UserProfile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DawnQuant.AShare.Api.Migrations.UserProfileDb
{
    [DbContext(typeof(UserProfileDbContext))]
    partial class UserProfileDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("DawnQuant.AShare.Entities.StrategyScheduledTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsJoinServerScheduleTask")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LatestExecuteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("OutputStockCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("StrategyIds")
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StrategyScheduledTasks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.BellwetherStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("TSCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("BellwetherStocks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.BellwetherStockCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BellwetherStockCategories");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.ExclusionStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Industry")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("TSCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExclusionStocks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SelfSelectStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Industry")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("TSCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SelfSelectStocks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SelfSelectStockCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsGroupByIndustry")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<int>("StockSortFiled")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SelfSelectStockCategories");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.StockStrategy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("StockStragyContent")
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StockStrategies");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.StockStrategyCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StockStrategyCategories");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SubjectAndHotStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Industry")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("TSCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubjectAndHotStocks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SubjectAndHotStockCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubjectAndHotStockCategories");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.BellwetherStock", b =>
                {
                    b.HasOne("DawnQuant.AShare.Entities.UserProfile.BellwetherStockCategory", null)
                        .WithMany("BellwetherStocks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SelfSelectStock", b =>
                {
                    b.HasOne("DawnQuant.AShare.Entities.UserProfile.SelfSelectStockCategory", null)
                        .WithMany("SelfSelectStocks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.StockStrategy", b =>
                {
                    b.HasOne("DawnQuant.AShare.Entities.UserProfile.StockStrategyCategory", null)
                        .WithMany("StockStrategies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SubjectAndHotStock", b =>
                {
                    b.HasOne("DawnQuant.AShare.Entities.UserProfile.SubjectAndHotStockCategory", null)
                        .WithMany("SubjectAndHotStocks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.BellwetherStockCategory", b =>
                {
                    b.Navigation("BellwetherStocks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SelfSelectStockCategory", b =>
                {
                    b.Navigation("SelfSelectStocks");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.StockStrategyCategory", b =>
                {
                    b.Navigation("StockStrategies");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.UserProfile.SubjectAndHotStockCategory", b =>
                {
                    b.Navigation("SubjectAndHotStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
