// <auto-generated />
using System;
using DawnQuant.AShare.Repository.Impl.EssentialData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DawnQuant.AShare.Api.Migrations.StockEDDb
{
    [DbContext(typeof(StockEDDbContext))]
    [Migration("20210626052659_InitStockEDDbContext")]
    partial class InitStockEDDbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("DawnQuant.AShare.Entities.EssentialData.BasicStockInfo", b =>
                {
                    b.Property<string>("TSCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DelistingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnFullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Exchange")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("ListedStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("ListingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MarketType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrimaryIndustry")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockCode")
                        .IsUnicode(true)
                        .HasColumnType("longtext");

                    b.Property<string>("StockConnect")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TSCode");

                    b.ToTable("BasicStockInfos");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.EssentialData.Company", b =>
                {
                    b.Property<string>("TSCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<string>("BusinessScope")
                        .HasColumnType("longtext");

                    b.Property<string>("Chairman")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Exchange")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GeneralManager")
                        .HasColumnType("longtext");

                    b.Property<string>("MainBusiness")
                        .HasColumnType("longtext");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .HasColumnType("longtext");

                    b.Property<double>("RegisteredCapital")
                        .HasColumnType("double");

                    b.Property<string>("Secretary")
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.HasKey("TSCode");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.EssentialData.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Level")
                        .IsUnique();

                    b.ToTable("Industrys");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.EssentialData.StockFormerName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AnnounceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ChangeReason")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TSCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StockFormerNames");
                });

            modelBuilder.Entity("DawnQuant.AShare.Entities.EssentialData.TradingCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Exchange")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("PreDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Date", "Exchange")
                        .IsUnique();

                    b.ToTable("TradingCalendars");
                });
#pragma warning restore 612, 618
        }
    }
}
